name: Release from settings.py version

on:
  push:
    branches:
      - main

jobs:
  version-release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get release tag
        id: release_tag
        run: |
          RAW_TAG=${GITHUB_REF#refs/tags/}
          TAG=${RAW_TAG#v}
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Get current version from settings.py
        id: curr_version
        run: |
          import re
          with open('settings/settings.py') as f:
              content = f.read()
          match = re.search(r'VERSION\s*=\s*["\'](\d+\.\d+\.\d+)["\']', content)
          if match:
              print(f"::set-output name=version::{match.group(1)}")
          else:
              print("VERSION not found")
        shell: python

      - name: Get previous release version
        id: prev_version
        run: |
          import re, subprocess
          try:
              tags = subprocess.check_output(['git', 'tag', '--sort=-creatordate'], text=True).splitlines()
              latest_tag = next((t for t in tags if re.match(r'^v\d+\.\d+\.\d+$', t)), None)
              if latest_tag:
                  print(f"::set-output name=tag::{latest_tag[1:]}")
              else:
                  print("::set-output name=tag::")
          except Exception:
              print("::set-output name=tag::")
        shell: python

      - name: Get changelog message
        id: changelog
        run: |
          import os
          with open('CHANGELOG.md', 'r') as f:
              lines = f.readlines()
          version = '${{ steps.curr_version.outputs.version }}'
          start = None
          for i, line in enumerate(lines):
              if line.strip().startswith(f'## v{version}'):
                  start = i
                  break
          title = f"# üÜï SpotDL Bot v{version}\n\n"
          novedades_title = "## üöÄ Novedades\n"
          docker_title = "## üê≥ Docker\n"
          docker_cmds = f"```bash\ndocker pull mralexandersaavedra/spotdl-bot:{version}\ndocker pull mralexandersaavedra/spotdl-bot:latest\n```\n"
          novedades = ''
          if start is not None:
              body_lines = []
              for line in lines[start+1:]:
                  if line.strip().startswith('## v'):
                      break
                  body_lines.append(line.rstrip())
              novedades = '\n'.join(body_lines).strip()
          if not novedades:
              novedades = '_No changelog entry found for this version._\n'
          body = title + novedades_title + novedades + '\n\n' + docker_title + docker_cmds
          with open(os.environ['GITHUB_OUTPUT'], 'a') as out:
              out.write(f"body<<EOF\n{body}\nEOF\n")
        shell: python
        
      - name: Create Release if version changed
        if: steps.prev_version.outputs.tag != steps.curr_version.outputs.version
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.curr_version.outputs.version }}
          name: v${{ steps.curr_version.outputs.version }}
          body: ${{ steps.changelog.outputs.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
